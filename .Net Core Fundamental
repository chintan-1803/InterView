launchSettings.json file is used for the purpose of running application in developer machine only. It does not play any role in terms further environment. 

For the deployment in other environments we can use appSettings.json file.

launchSettings.json file has profiles defined which contain required information to run application in local developer machine. In profile section, we can also define 
environment too. By default, there are two profiles one named as IIS Express and other will be named as similar to application name. When developer runs the application 
by using IIS express, settings mentioned in relevant profile will be used. 

On the other hand, when application is run by using .net core CLI at that time profile having similar name to application name will be used.

Earlier versions of .net core used to have two files name Program.cs and StartUp.cs. StartUp.cs file is called from program.cs

Configure method of startUp.cs file is repsonsible for adding required middlewares for the project.

Newer version of .Net core has removed file startup.cs and include relevant logic in Program.cs file only.

Program.cs file is available at the root level of .Net core project. This file is useful for registering services and middlewares.

CLR (Common Language Runtime) is a run time engine in .Net framework which has JIT (Just in Time) compiler in it which converts the binary format of data (IL-- Intermediate
Language,MSIL -- Microsoft Intermediate Language, CIL -- Common Intermediate Language) which is the result of the compilation of C# program into native instructions which will be 
understood by CPU.

https://medium.com/@kunaltandon.kt/c-clr-il-jit-compilation-code-access-security-explained-269124121f5
https://www.geeksforgeeks.org/what-is-just-in-time-jit-compiler-in-dot-net/

https://www.youtube.com/watch?v=ttgqRyMPU9c -- YouTube Video Must Watch

C#,VB.Net and F# which use CLR are called as managed languages. Code written in the same is not directly converted into Machine Code (Native instructions). It is 
converted in intermediate code (binary code) first which will be later on converted into machine code by JIT compiler.

Below is the URL in which flow of request and response has been mentioned in .Net core application:

https://www.dotnetcurry.com/aspnet-core/middleware-in-aspnetcore#:~:text=In%20ASP.NET%20Core%2C%20middleware,request%20and%20produce%20a%20response.
